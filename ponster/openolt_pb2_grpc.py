# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import openolt_pb2 as openolt__pb2


class OpenoltStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.DisableOlt = channel.unary_unary(
        '/openolt.Openolt/DisableOlt',
        request_serializer=openolt__pb2.Empty.SerializeToString,
        response_deserializer=openolt__pb2.Empty.FromString,
        )
    self.ReenableOlt = channel.unary_unary(
        '/openolt.Openolt/ReenableOlt',
        request_serializer=openolt__pb2.Empty.SerializeToString,
        response_deserializer=openolt__pb2.Empty.FromString,
        )
    self.ActivateOnu = channel.unary_unary(
        '/openolt.Openolt/ActivateOnu',
        request_serializer=openolt__pb2.Onu.SerializeToString,
        response_deserializer=openolt__pb2.Empty.FromString,
        )
    self.DeactivateOnu = channel.unary_unary(
        '/openolt.Openolt/DeactivateOnu',
        request_serializer=openolt__pb2.Onu.SerializeToString,
        response_deserializer=openolt__pb2.Empty.FromString,
        )
    self.DeleteOnu = channel.unary_unary(
        '/openolt.Openolt/DeleteOnu',
        request_serializer=openolt__pb2.Onu.SerializeToString,
        response_deserializer=openolt__pb2.Empty.FromString,
        )
    self.OmciMsgOut = channel.unary_unary(
        '/openolt.Openolt/OmciMsgOut',
        request_serializer=openolt__pb2.OmciMsg.SerializeToString,
        response_deserializer=openolt__pb2.Empty.FromString,
        )
    self.OnuPacketOut = channel.unary_unary(
        '/openolt.Openolt/OnuPacketOut',
        request_serializer=openolt__pb2.OnuPacket.SerializeToString,
        response_deserializer=openolt__pb2.Empty.FromString,
        )
    self.UplinkPacketOut = channel.unary_unary(
        '/openolt.Openolt/UplinkPacketOut',
        request_serializer=openolt__pb2.UplinkPacket.SerializeToString,
        response_deserializer=openolt__pb2.Empty.FromString,
        )
    self.FlowAdd = channel.unary_unary(
        '/openolt.Openolt/FlowAdd',
        request_serializer=openolt__pb2.Flow.SerializeToString,
        response_deserializer=openolt__pb2.Empty.FromString,
        )
    self.FlowRemove = channel.unary_unary(
        '/openolt.Openolt/FlowRemove',
        request_serializer=openolt__pb2.Flow.SerializeToString,
        response_deserializer=openolt__pb2.Empty.FromString,
        )
    self.HeartbeatCheck = channel.unary_unary(
        '/openolt.Openolt/HeartbeatCheck',
        request_serializer=openolt__pb2.Empty.SerializeToString,
        response_deserializer=openolt__pb2.Heartbeat.FromString,
        )
    self.EnablePonIf = channel.unary_unary(
        '/openolt.Openolt/EnablePonIf',
        request_serializer=openolt__pb2.Interface.SerializeToString,
        response_deserializer=openolt__pb2.Empty.FromString,
        )
    self.DisablePonIf = channel.unary_unary(
        '/openolt.Openolt/DisablePonIf',
        request_serializer=openolt__pb2.Interface.SerializeToString,
        response_deserializer=openolt__pb2.Empty.FromString,
        )
    self.GetDeviceInfo = channel.unary_unary(
        '/openolt.Openolt/GetDeviceInfo',
        request_serializer=openolt__pb2.Empty.SerializeToString,
        response_deserializer=openolt__pb2.DeviceInfo.FromString,
        )
    self.Reboot = channel.unary_unary(
        '/openolt.Openolt/Reboot',
        request_serializer=openolt__pb2.Empty.SerializeToString,
        response_deserializer=openolt__pb2.Empty.FromString,
        )
    self.CollectStatistics = channel.unary_unary(
        '/openolt.Openolt/CollectStatistics',
        request_serializer=openolt__pb2.Empty.SerializeToString,
        response_deserializer=openolt__pb2.Empty.FromString,
        )
    self.CreateTconts = channel.unary_unary(
        '/openolt.Openolt/CreateTconts',
        request_serializer=openolt__pb2.Tconts.SerializeToString,
        response_deserializer=openolt__pb2.Empty.FromString,
        )
    self.RemoveTconts = channel.unary_unary(
        '/openolt.Openolt/RemoveTconts',
        request_serializer=openolt__pb2.Tconts.SerializeToString,
        response_deserializer=openolt__pb2.Empty.FromString,
        )
    self.EnableIndication = channel.unary_stream(
        '/openolt.Openolt/EnableIndication',
        request_serializer=openolt__pb2.Empty.SerializeToString,
        response_deserializer=openolt__pb2.Indication.FromString,
        )


class OpenoltServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def DisableOlt(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ReenableOlt(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ActivateOnu(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeactivateOnu(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteOnu(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def OmciMsgOut(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def OnuPacketOut(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UplinkPacketOut(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FlowAdd(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FlowRemove(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def HeartbeatCheck(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def EnablePonIf(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DisablePonIf(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetDeviceInfo(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Reboot(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CollectStatistics(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateTconts(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RemoveTconts(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def EnableIndication(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_OpenoltServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'DisableOlt': grpc.unary_unary_rpc_method_handler(
          servicer.DisableOlt,
          request_deserializer=openolt__pb2.Empty.FromString,
          response_serializer=openolt__pb2.Empty.SerializeToString,
      ),
      'ReenableOlt': grpc.unary_unary_rpc_method_handler(
          servicer.ReenableOlt,
          request_deserializer=openolt__pb2.Empty.FromString,
          response_serializer=openolt__pb2.Empty.SerializeToString,
      ),
      'ActivateOnu': grpc.unary_unary_rpc_method_handler(
          servicer.ActivateOnu,
          request_deserializer=openolt__pb2.Onu.FromString,
          response_serializer=openolt__pb2.Empty.SerializeToString,
      ),
      'DeactivateOnu': grpc.unary_unary_rpc_method_handler(
          servicer.DeactivateOnu,
          request_deserializer=openolt__pb2.Onu.FromString,
          response_serializer=openolt__pb2.Empty.SerializeToString,
      ),
      'DeleteOnu': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteOnu,
          request_deserializer=openolt__pb2.Onu.FromString,
          response_serializer=openolt__pb2.Empty.SerializeToString,
      ),
      'OmciMsgOut': grpc.unary_unary_rpc_method_handler(
          servicer.OmciMsgOut,
          request_deserializer=openolt__pb2.OmciMsg.FromString,
          response_serializer=openolt__pb2.Empty.SerializeToString,
      ),
      'OnuPacketOut': grpc.unary_unary_rpc_method_handler(
          servicer.OnuPacketOut,
          request_deserializer=openolt__pb2.OnuPacket.FromString,
          response_serializer=openolt__pb2.Empty.SerializeToString,
      ),
      'UplinkPacketOut': grpc.unary_unary_rpc_method_handler(
          servicer.UplinkPacketOut,
          request_deserializer=openolt__pb2.UplinkPacket.FromString,
          response_serializer=openolt__pb2.Empty.SerializeToString,
      ),
      'FlowAdd': grpc.unary_unary_rpc_method_handler(
          servicer.FlowAdd,
          request_deserializer=openolt__pb2.Flow.FromString,
          response_serializer=openolt__pb2.Empty.SerializeToString,
      ),
      'FlowRemove': grpc.unary_unary_rpc_method_handler(
          servicer.FlowRemove,
          request_deserializer=openolt__pb2.Flow.FromString,
          response_serializer=openolt__pb2.Empty.SerializeToString,
      ),
      'HeartbeatCheck': grpc.unary_unary_rpc_method_handler(
          servicer.HeartbeatCheck,
          request_deserializer=openolt__pb2.Empty.FromString,
          response_serializer=openolt__pb2.Heartbeat.SerializeToString,
      ),
      'EnablePonIf': grpc.unary_unary_rpc_method_handler(
          servicer.EnablePonIf,
          request_deserializer=openolt__pb2.Interface.FromString,
          response_serializer=openolt__pb2.Empty.SerializeToString,
      ),
      'DisablePonIf': grpc.unary_unary_rpc_method_handler(
          servicer.DisablePonIf,
          request_deserializer=openolt__pb2.Interface.FromString,
          response_serializer=openolt__pb2.Empty.SerializeToString,
      ),
      'GetDeviceInfo': grpc.unary_unary_rpc_method_handler(
          servicer.GetDeviceInfo,
          request_deserializer=openolt__pb2.Empty.FromString,
          response_serializer=openolt__pb2.DeviceInfo.SerializeToString,
      ),
      'Reboot': grpc.unary_unary_rpc_method_handler(
          servicer.Reboot,
          request_deserializer=openolt__pb2.Empty.FromString,
          response_serializer=openolt__pb2.Empty.SerializeToString,
      ),
      'CollectStatistics': grpc.unary_unary_rpc_method_handler(
          servicer.CollectStatistics,
          request_deserializer=openolt__pb2.Empty.FromString,
          response_serializer=openolt__pb2.Empty.SerializeToString,
      ),
      'CreateTconts': grpc.unary_unary_rpc_method_handler(
          servicer.CreateTconts,
          request_deserializer=openolt__pb2.Tconts.FromString,
          response_serializer=openolt__pb2.Empty.SerializeToString,
      ),
      'RemoveTconts': grpc.unary_unary_rpc_method_handler(
          servicer.RemoveTconts,
          request_deserializer=openolt__pb2.Tconts.FromString,
          response_serializer=openolt__pb2.Empty.SerializeToString,
      ),
      'EnableIndication': grpc.unary_stream_rpc_method_handler(
          servicer.EnableIndication,
          request_deserializer=openolt__pb2.Empty.FromString,
          response_serializer=openolt__pb2.Indication.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'openolt.Openolt', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
